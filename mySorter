public class MainActivity {

    public static void main(String[] args) {
        String s, sorter;
        int masterLength = 30, lf = 0, ln = 0,validate=1;
        sorter = " Before Espresso can interact with the app under test, you must first specify the UI component or view. Espresso supports the use of Hamcrest matchers for specifying views and adapters in your app.\n" +
                "\n" +
                "To find the view, call the onView() method and pass in a view matcher that specifies the view that you are targeting. This is described in more detail in Specifying a View Matcher. The onView() method returns a ViewInteraction object that allows your test to interact with the view. However, calling the onView() method may not work if you want to locate a view in an RecyclerView layout. In this case, follow the instructions in Locating a view in an AdapterView instead.\n" +
                "\n" +
                "Note: The onView() method does not check if the view you specified is valid. Instead, Espresso searches only the current view hierarchy, using the matcher provided. If no match is found, the method throws a NoMatchingViewException.\n" +
                "\n" +
                "The following code snippet shows how you might write a test that accesses an EditText field, enters a string of text, closes the virtual keyboard, and then performs a button click. ";

        while (sorter.length()>=masterLength) {
            s = sorter.substring(lf, masterLength);
            int index = s.lastIndexOf('.');
            if (index != -1){
                ln = ln + index+1;
                s = sorter.substring(lf, ln);
                lf = ln;
                masterLength = ln + 10;
            }else{
                s = sorter.substring(lf);
                index = s.indexOf('.');
                ln = ln + index+1;
                s = sorter.substring(lf, ln);
                lf = ln;
                masterLength = ln + 10;
            }
            System.out.println("String item is S : " + s.trim());
        }
    }

}

